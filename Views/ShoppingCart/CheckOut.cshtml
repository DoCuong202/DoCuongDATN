@model IEnumerable<BanHangOnline.Models.ShoppingCartItem>
@using BanHangOnline.Common
@using Microsoft.AspNet.Identity
@using Microsoft.AspNet.Identity.EntityFramework
@{
    ViewBag.Title = "Giỏ hàng";
}
@{
    var userManager = new UserManager<BanHangOnline.Models.ApplicationUser>(new UserStore<BanHangOnline.Models.ApplicationUser>(new BanHangOnline.Models.ApplicationDbContext()));
    var currentUser = userManager.FindById(User.Identity.GetUserId());
}
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
<!-- Font Awesome -->
<link rel="stylesheet" href="~/Content/Assets/plugins/fontawesome-free/css/all.min.css">
<!-- Theme style -->
<link rel="stylesheet" href="~/Content/clients/dist/css/adminlte.min.css">
<link rel="stylesheet" type="text/css" href="~/Content/Assets/styles/bootstrap4/bootstrap.min.css">
<link href="~/Content/Assets/plugins/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet" type="text/css">
<link rel="stylesheet" type="text/css" href="~/Content/Assets/plugins/OwlCarousel2-2.2.1/owl.carousel.css">
<link rel="stylesheet" type="text/css" href="~/Content/Assets/plugins/OwlCarousel2-2.2.1/owl.theme.default.css">
<link rel="stylesheet" type="text/css" href="~/Content/Assets/plugins/OwlCarousel2-2.2.1/animate.css">
<link rel="stylesheet" href="~/Content/Assets/plugins/themify-icons/themify-icons.css">
<link rel="stylesheet" type="text/css" href="~/Content/Assets/plugins/jquery-ui-1.12.1.custom/jquery-ui.css">
<link rel="stylesheet" type="text/css" href="~/Content/Assets/styles/single_styles.css">
<link rel="stylesheet" type="text/css" href="~/Content/Assets/styles/single_responsive.css">
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery-3.4.1.intellisense.js"></script>
<script src="~/Scripts/jquery-3.4.1.js"></script>
<script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
<style>
    .giohang {
        margin-top: 170px;
    }

    .selector_in_cart {
        margin: 0 !important;
    }

    .card-title.checkout-title {
        color: white !important;
    }
</style>
<div class="container">

    <div class="callout callout-info giohang">
        <h5><i class="fas fa-info"></i> Note:</h5>
        Đăng nhập tài khoản để lưu thông tin các đơn hàng đã mua.
    </div>
    <div class="card card-primary form-updateAddress">
        @if (Request.IsAuthenticated)
        {
            <div class="card-header ">
                <h3 class="card-title checkout-title">Vui lòng điền các thông tin dưới đây</h3>
            </div>
            <div class="card-body">
                <input class="form-control" value="@currentUser.Fullname" name="CustomerName" id="CustomerName" required type="text" placeholder="Họ tên">
                <br>
                <input class="form-control" value="@currentUser.Address" id="Address" required type="text" placeholder="Địa chỉ">
                <br>
                <input class="form-control" value="@currentUser.Phone" id="Phone" required type="number" placeholder="Số điện thoại">
                <div class="place-autocomplete-card" id="place-autocomplete-card">
                    <p>Search for a place here:</p>
                </div>
                <div id="map"></div>
                <br>
            </div>


            <div class="card-footer">
                <button type="submit" class="btn btn-primary btnUpdateInfo">Lưu</button>
            </div>
        }
        else
        {
            <div class="card-header ">
                <h3 class="card-title checkout-title">Vui lòng điền các thông tin dưới đây</h3>
            </div>
            <div class="card-body">
                <input class="form-control" name="CustomerName" id="CustomerName" required type="text" placeholder="Họ tên">
                <br>
                <input class="form-control" name="Address" id="Address" required type="text" placeholder="Địa chỉ">
                <br>
                <input class="form-control" name="Phone" id="Phone" required type="number" placeholder="Số điện thoại">
                <br>
            </div>
            <div class="card-footer">
                <button type="submit" class="btn btn-primary btnUpdateInfo">Lưu</button>
            </div>
        }

    </div>

    <div class="invoice p-3 mb-3">
        <div class="row">
            <div class="col-12">
                <h4>
                    <div class="logo_container">
                        <a href="">colo<span>shop</span></a>
                    </div>
                    <small class="float-right">Date: @DateTime.Now</small>
                </h4>
            </div>
        </div>

        <div class="row invoice-info mt-4">
            <div class="col-sm-4 invoice-col">
                Địa chỉ shop
                <address>
                    <strong>Admin, Inc.</strong><br>
                    795 Folsom Ave, Suite 600<br>
                    San Francisco, CA 94107<br>
                    Phone: (804) 123-5432<br>
                    Email: info@almasaeedstudio.com
                </address>
            </div>
            <div class="col-sm-4 invoice-col">
                Địa chỉ người nhận
                <button type="submit" class="btn btn-sm float-right " id="btnEditAddress" style="margin-right: 5px;">
                    Sửa
                </button>
                <address>
                    <strong class="customerNameBill"></strong><br>
                    <p class="AddressBill"></p>
                    Phone: <p class="PhoneBill"></p><br>
                    @if (Request.IsAuthenticated)
                    {
                        <input id="IdCustomer" value="@currentUser.Id" type="hidden" />

                    }
                </address>
            </div>
        </div>
        <div class="row">
            <div class="col-12 table-responsive mt-2 mb-2 allproducts">
                @if (Model != null && Model.Any())
                {
                    var stt = 0;
                    var tongtien = decimal.Zero;
                    var sl = 0;
                    var Total = decimal.Zero;
                    var Tax = decimal.Zero;
                    var shipping = decimal.Zero;
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>STT</th>
                                <th>Tên sản phẩm</th>
                                <th>Ảnh</th>
                                <th>Giá</th>
                                <th>Số lượng</th>
                                <th>Thành tiền</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                tongtien += item.TotalPrice;
                                sl += item.Quantity;
                                var thanhtien = @item.Price * @item.Quantity;
                                <tr id="trow_@item.ProductId" style="line-height: 50px;">
                                    <td>@stt</td>
                                    <td><a href="/chi-tiet-san-pham/@item.ProductCategoryID-@item.ProductId">@item.ProductName</a></td>
                                    <td><img src="@item.ProductImage" style="height: 50px;" /></td>
                                    <td>@Common.FormatNumber(item.Price, 2)</td>
                                    <td>@item.Quantity</td>
                                    <td>@Common.FormatNumber(item.TotalPrice, 2)</td>
                                </tr>
                                stt++;
                            }
                        </tbody>
                    </table>
                    <div class="row">
                        <div class="col-6">
                            <div class="mb-3 pr-4">
                                <label for="formNote" class="form-label">Chú thích</label>
                                <textarea class="form-control" id="formNote" rows="3"></textarea>
                            </div>
                        </div>
                        <div class="col-6">
                            <p class="lead">Giá tiền</p>
                            <div class="table-responsive">
                                <table class="table">
                                    <tbody>
                                        <tr>
                                            <th style="width:50%">Số lượng:</th>
                                            <td>@sl</td>
                                        </tr>
                                        <tr>
                                            <th>Tax (9.3%)</th>
                                            <td>0đ</td>
                                        </tr>
                                        <tr>
                                            <th>Shipping:</th>
                                            <td>0đ</td>
                                        </tr>
                                        <tr>
                                            <th>Total:</th>
                                            @if (tongtien > 0)
                                            {
                                                Total = tongtien + Tax + shipping;
                                            }
                                            <td>@Common.FormatNumber(Total, 0)đ</td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="row no-print">
            <div class="col-12 row">
                <div class="col-6">
                    <p class="lead">Phương thức thanh toán: </p>
                    <img src="~/Content/clients/dist/img/credit/visa.png" alt="Visa">
                    <img src="~/Content/clients/dist/img/credit/mastercard.png" alt="Mastercard">
                    <img src="~/Content/clients/dist/img/credit/american-express.png" alt="American Express">
                    <img src="~/Content/clients/dist/img/credit/paypal2.png" alt="Paypal">
                    <p class="text-muted well well-sm shadow-none" style="margin-top: 10px;">
                        Đặt ship: <br />
                        - Nhận hàng tại nhà<br />
                        ...
                        <br />
                        Đặt bàn: <br />
                        - Sử dụng món tại quán<br />
                        ...
                    </p>
                </div>
                <div class="col-6">
                    <div class="form-group" data-select2-id="29">
                        <label>Chọn phương thức thanh toán</label>
                        <div class="form-group" id="paymentOptions">
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="paymentMethod" id="COD" value="COD" checked>
                                <label class="form-check-label">COD</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="paymentMethod" id="VNPAY" value="VNPAY">
                                <label class="form-check-label">VNPAY</label>
                            </div>
                        </div>
                        <div class="form-group" id="load_form_payment" style="display:none;">
                            <h4> <label>Chọn phương thức thanh toán:</label><br /></h4>
                            <h5>Cách 1: Chuyển hướng sang VNPAY chọn phương thức thanh toán</h5>
                            <label><input type="radio" name="TypePaymentVN" value="0" checked /> Cổng thanh toán VNPAYQR </label>
                            <h5>Cách 2: Tách phương thức thanh toán tại site của Merchant</h5>
                            <label><input type="radio" name="TypePaymentVN" value="1" /> Thanh toán qua ứng dụng hỗ trợ VNPAYQR </label><br />
                            <label><input type="radio" name="TypePaymentVN" value="2" /> ATM-Tài khoản ngân hàng nội địa </label><br />
                            <label><input type="radio" name="TypePaymentVN" value="3" /> Thanh toán qua thẻ quốc tế </label><br />
                        </div>
                        <a href="#" id="btnCheckOutBillLink" disabled>
                            <button type="submit" class="btn btn btn-primary float-right" id="btnCheckOutBill" style="margin-right: 5px;">
                                Đặt hàng
                            </button>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    (g => { var h, a, k, p = "The Google Maps JavaScript API", c = "google", l = "importLibrary", q = "__ib__", m = document, b = window; b = b[c] || (b[c] = {}); var d = b.maps || (b.maps = {}), r = new Set, e = new URLSearchParams, u = () => h || (h = new Promise(async (f, n) => { await (a = m.createElement("script")); e.set("libraries", [...r] + ""); for (k in g) e.set(k.replace(/[A-Z]/g, t => "_" + t[0].toLowerCase()), g[k]); e.set("callback", c + ".maps." + q); a.src = `https://maps.${c}apis.com/maps/api/js?` + e; d[q] = f; a.onerror = () => h = n(Error(p + " could not load.")); a.nonce = m.querySelector("script[nonce]")?.nonce || ""; m.head.append(a) })); d[l] ? console.warn(p + " only loads once. Ignoring:", g) : d[l] = (f, ...n) => r.add(f) && u().then(() => d[l](f, ...n)) })
        ({ key: "AIzaSyB41DRUbKWJHPxaFjMAwdrzWzbVKartNGg", v: "beta" });</script>

<script>

let map;
let marker;
let infoWindow;

async function initMap() {
  // Request needed libraries.
  const [{ Map }, { AdvancedMarkerElement }] = await Promise.all([
    google.maps.importLibrary("marker"),
    google.maps.importLibrary("places"),
  ]);

  // Initialize the map.
  map = new google.maps.Map(document.getElementById("map"), {
    center: { lat: 40.749933, lng: -73.98633 },
    zoom: 13,
    mapId: "4504f8b37365c3d0",
    mapTypeControl: false,
  });

  const placeAutocomplete = new google.maps.places.PlaceAutocompleteElement();

  placeAutocomplete.id = "place-autocomplete-input";

  const card = document.getElementById("place-autocomplete-card");

  card.appendChild(placeAutocomplete);
  map.controls[google.maps.ControlPosition.TOP_LEFT].push(card);
  // Create the marker and infowindow
  marker = new google.maps.marker.AdvancedMarkerElement({
    map,
  });
  infoWindow = new google.maps.InfoWindow({});
  // Add the gmp-placeselect listener, and display the results on the map.
  placeAutocomplete.addEventListener("gmp-placeselect", async ({ place }) => {
    await place.fetchFields({
      fields: ["displayName", "formattedAddress", "location"],
    });
    // If the place has a geometry, then present it on a map.
    if (place.viewport) {
      map.fitBounds(place.viewport);
    } else {
      map.setCenter(place.location);
      map.setZoom(17);
    }

    let content =
      '<div id="infowindow-content">' +
      '<span id="place-displayname" class="title">' +
      place.displayName +
      "</span><br />" +
      '<span id="place-address">' +
      place.formattedAddress +
      "</span>" +
      "</div>";

    updateInfoWindow(content, place.location);
    marker.position = place.location;
  });
}

// Helper function to create an info window.
function updateInfoWindow(content, center) {
  infoWindow.setContent(content);
  infoWindow.setPosition(center);
  infoWindow.open({
    map,
    anchor: marker,
    shouldFocus: false,
  });
}

initMap();



    $(document).ready(function () {
        const google = window.google;

        // tạo places autocomplete
        //const autocomplete = new google.maps.places.autocomplete(
        //    document.getelementbyid("address"),
        //    {
        //        types: ["geocode"],
        //        componentrestrictions: { country: "vn" },
        //    }
        //);

        //var autocomplete = new google.maps.places.Autocomplete(
        //    document.getElementById('Address'), {
        //    types: ['geocode']
        //});

        $("#btnEditAddress").click(function () {
            $(".form-updateAddress").show()
        })
        $('input[name="paymentMethod"]').change(function () {
            var selectedPaymentMethod = $(this).val();

            $('#load_form_payment').hide();

            if (selectedPaymentMethod === "VNPAY") {
                $('#load_form_payment').show();
            }
        });
        $(".btnUpdateInfo").click(function (e) {
            e.preventDefault();
            var customerName = $("#CustomerName").val();
            var Phone = $("#Phone").val();
            var Address = $("#Address").val();
            $.ajax({
                url: '/ShoppingCart/RenderAddress',
                type: 'POST',
                data: { customerName: customerName, Phone: Phone, Address: Address },
                success: function (rs) {
                    if (rs.Success) {
                        $(".customerNameBill").text(rs.customerName),
                            $(".AddressBill").text(rs.Address),
                            $(".PhoneBill").text(rs.Phone),
                            $(".form-updateAddress").hide()
                    }
                }
            });
        })

        var Code = "";
        $("#btnCheckOutBill").click(function (e) {
            e.preventDefault();
            var customerNameBill = $(".customerNameBill").text();
            var AddressBill = $(".AddressBill").text();
            var PhoneBill = $(".PhoneBill").text();
            var Note = $("#formNote").val();
            var IdCustomer = $("#IdCustomer").val();
            var selectedValuePayment = $('input[name="paymentMethod"]:checked').val();
            var selectedValuepaymentVNPAY = $('input[name="TypePaymentVN"]').val();
            $.ajax({

                url: '/ShoppingCart/CheckOutCart',
                type: 'POST',
                data: { customerNameBill: customerNameBill, PhoneBill: PhoneBill, AddressBill: AddressBill, TypePayment: selectedValuePayment, Note: Note, IdCustomer: IdCustomer, selectedValuepaymentVNPAY: selectedValuepaymentVNPAY },
                success: function (rs) {
                    if (rs.Success) {
                        debugger
                        if (rs.type == 1) {
                            Code = rs.code;
                            var newHref = '/order-detail/' + Code;
                            window.location.href = location.origin + location.pathname + newHref;
                        }
                        if (rs.type == 2) {
                            var url = rs.Url;
                            window.location.href = url;
                        }
                    } else {

                    }
                }
            });
        })


    })
</script>
@section scripts{
    <!-- jQuery -->
    <script src="~/Content/Assets/plugins/jquery/jquery.min.js"></script>
    <!-- Bootstrap 4 -->
    <script src="~/Content/Assets/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <!-- AdminLTE App -->
    <script src="~/Content/Assets/js/jquery-3.2.1.min.js"></script>
    <script src="~/Content/Assets/styles/bootstrap4/popper.js"></script>
    <script src="~/Content/Assets/styles/bootstrap4/bootstrap.min.js"></script>
    <script src="~/Content/Assets/plugins/Isotope/isotope.pkgd.min.js"></script>
    <script src="~/Content/Assets/plugins/OwlCarousel2-2.2.1/owl.carousel.js"></script>
    <script src="~/Content/Assets/plugins/easing/easing.js"></script>
    <script src="~/Content/Assets/plugins/jquery-ui-1.12.1.custom/jquery-ui.js"></script>
    <script src="~/Content/Assets/js/single_custom.js"></script>
}

